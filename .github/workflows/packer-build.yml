name: Packer Build CI

on:
  push:
    branches:
      - main

jobs:
  packer-build-npm-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Copy webapp files
        run: rsync -arv --exclude='.git/' --exclude='.github/' --exclude='.gitignore' . ./webapp && ls -R

      - name: Zip file
        uses: montudor/action-zip@v1
        with:
          args: zip -r webapp.zip webapp/

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: check node and npm version
        run: |
          node -v
          npm -v

      - name: Install MySQL
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-server
          sudo systemctl start mysql.service

      - name: Configure MySQL
        run: |
          sudo mysql --user=${{ secrets.DB_USERNAME }} --password=${{ secrets.WEBAPP_PASSWORD }} -e "CREATE DATABASE IF NOT EXISTS ${{ secrets.DB_NAME }};"

      - name: Configure environment variables
        run: |
          echo > .env
          echo PORT=${{ secrets.PORT }} >> .env
          echo DB_USERNAME=${{ secrets.DB_USERNAME }} >> .env
          echo DB_PASSWORD=${{ secrets.WEBAPP_PASSWORD }} >> .env
          echo DB_NAME=${{ secrets.DB_NAME }} >> .env
          echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          echo DB_DIALECT=${{ secrets.DB_DIALECT }} >> .env

      - name: Check .env file
        run: cat .env

      - name: Install Node dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Setup Packer
        uses: hashicorp/setup-packer@main
        id: setup
        with:
          version: "latest"

      - name: Setup github-action-awscli
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Packer init
        id: packer_init
        run: |
          cd packer
          packer init ./ami.pkr.hcl

      - name: Packer validate
        id: packer_validate
        run: >
          cd packer && 
          packer validate -var 'aws_region=${{vars.AWS_REGION}}'
          -var 'ssh_username=${{vars.SSH_USERNAME}}'
          -var 'aws_access_key_id=${{secrets.ACCESS_KEY}}'
          -var 'aws_secret_access_key=${{secrets.SECRET_ACCESS_KEY}}'
          -var 'ami_users=${{secrets.AMI_USERS}}'
          -var 'source_ami=${{vars.SOURCE_AMI}}'
          -var 'ami_description=${{vars.AMI_DESCRIPTION}}'
          -var 'instance_type=${{vars.INSTANCE_TYPE}}'
          -var 'ami_name=${{vars.AMI_NAME}}'
          -var 'subnet_id=${{vars.SUBNET_ID}}'
          -var 'delay_seconds=${{vars.DELAY_SECONDS}}'
          -var 'max_attempts=${{vars.MAX_ATTEMPTS}}'
          -var 'volume_size=${{vars.VOLUME_SIZE}}'
          -var 'volume_type=${{vars.VOLUME_TYPE}}'
          -var 'port=${{secrets.PORT}}'
          -var 'db_username=${{secrets.DB_USERNAME}}'
          -var 'db_password=${{secrets.DB_PASSWORD}}'
          -var 'db_name=${{secrets.DB_NAME}}'
          -var 'db_host=${{secrets.DB_HOST}}'
          -var 'db_dialect=${{secrets.DB_DIALECT}}'
          ami.pkr.hcl

      - name: Packer build
        id: packer_build
        run: >
          cd packer && 
          packer build -var 'aws_region=${{vars.AWS_REGION}}'
          -var 'ssh_username=${{vars.SSH_USERNAME}}'
          -var 'aws_access_key_id=${{secrets.ACCESS_KEY}}'
          -var 'aws_secret_access_key=${{secrets.SECRET_ACCESS_KEY}}'
          -var 'ami_users=${{secrets.AMI_USERS}}'
          -var 'source_ami=${{vars.SOURCE_AMI}}'
          -var 'ami_description=${{vars.AMI_DESCRIPTION}}'
          -var 'instance_type=${{vars.INSTANCE_TYPE}}'
          -var 'ami_name=${{vars.AMI_NAME}}'
          -var 'subnet_id=${{vars.SUBNET_ID}}'
          -var 'delay_seconds=${{vars.DELAY_SECONDS}}'
          -var 'max_attempts=${{vars.MAX_ATTEMPTS}}'
          -var 'volume_size=${{vars.VOLUME_SIZE}}'
          -var 'volume_type=${{vars.VOLUME_TYPE}}'
          -var 'port=${{secrets.PORT}}'
          -var 'db_username=${{secrets.DB_USERNAME}}'
          -var 'db_password=${{secrets.DB_PASSWORD}}'
          -var 'db_name=${{secrets.DB_NAME}}'
          -var 'db_host=${{secrets.DB_HOST}}'
          -var 'db_dialect=${{secrets.DB_DIALECT}}'
          ami.pkr.hcl